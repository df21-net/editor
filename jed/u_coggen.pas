unit u_coggen;

{$MODE Delphi}

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  StdCtrls, U_Medit, GlobalVars;

type
  TCogGen = class(TForm)
    CBBriar: TCheckBox;
    CBRifle: TCheckBox;
    CBBow: TCheckBox;
    CBRepeater: TCheckBox;
    CBRailgun: TCheckBox;
    CBConcussion: TCheckBox;
    CBLS: TCheckBox;
    CBRank: TComboBox;
    LBGoals: TListBox;
    EBGoal: TEdit;
    BNAdd: TButton;
    BNDelete: TButton;
    Label1: TLabel;
    BNUpdate: TButton;
    Label2: TLabel;
    BNGenerate: TButton;
    BNCancel: TButton;
    Label3: TLabel;
    Label4: TLabel;
    CBTD: TCheckBox;
    CBSeq: TCheckBox;
    procedure BNAddClick(Sender: TObject);
    procedure BNUpdateClick(Sender: TObject);
    procedure BNDeleteClick(Sender: TObject);
    procedure LBGoalsClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
    Procedure CreateCOG(const name:string);
  public
   goalBase:integer;
   cstrs:TCOGStrings;
   Function GenerateCOG(const name:string):boolean;
    { Public declarations }
  end;

var
  CogGen: TCogGen;

implementation

{$R *.lfm}

Function TCogGen.GenerateCOG(const name:string):boolean;
var s:string;
    i,k:integer;
    cg:integer;
begin
 result:=false;
 LBGoals.Items.Clear;

 s:=Format('GOAL_%-.5d',[GoalBase]);
 k:=cstrs.Keys.IndexOf(s);
 cg:=GoalBase;
 if k<>-1 then
 repeat
  s:=Format('GOAL_%-.5d',[cg]);
  if CompareText(s,cstrs.Keys[k])<>0 then break;
  LBGoals.Items.Add(cstrs.Strings[k]);
  inc(k); inc(cg);
 until k>=cstrs.Keys.count;

 LBGoals.ItemIndex:=0;
 if CBRank.ItemIndex=-1 then CBRank.ItemIndex:=0;

 if ShowModal<>mrOK then exit;

 k:=LBGoals.Items.count;
 for i:=0 to k-1 do
 begin
  s:=Format('GOAL_%-.5d',[GoalBase+i]);
  cstrs.AddString(s,LBGoals.Items[i])
 end;
 s:=Format('GOAL_%-.5d',[GoalBase+k]);
 cstrs.DeleteString(s);

 CreateCOG(name);
 result:=true;

end;

procedure TCogGen.BNAddClick(Sender: TObject);
var i:integer;
begin
 i:=LBGoals.ItemIndex;
 if i=-1 then LBGoals.Items.Add(EBGoal.Text)
 else LBGoals.Items.Insert(i,EBGoal.Text);
 LBGoals.ItemIndex:=i;
end;

procedure TCogGen.BNUpdateClick(Sender: TObject);
var i:integer;
begin
 i:=LBGoals.ItemIndex;
 if i<0 then exit;
 LBGoals.Items[i]:=EBGoal.Text;
 LBGoals.ItemIndex:=i;
end;

procedure TCogGen.BNDeleteClick(Sender: TObject);
var i:integer;
begin
 i:=LBGoals.ItemIndex;
 if i<0 then exit;
 LBGoals.Items.Delete(i);
 if LBGoals.Items.Count>0 then
  LBGoals.ItemIndex:=LBGoals.Items.Count-1;
end;

Procedure TCogGen.CreateCOG(const name:string);
var
    t:TextFile;
    i:integer;
begin
 AssignFile(t,name);
 Rewrite(t);
 try
  Writeln(t,'#Level master COG');
  Writeln(t,'#Generated by JED '+JedVersion);
  Writeln(t);
  Writeln(t,'symbols');
  Writeln(t,'message   startup');
  Writeln(t,'message timer');
  Writeln(t,'int       player    local');
  Writeln(t,'end');
  Writeln(t);
  Writeln(t,'code');
  Writeln(t);
  Writeln(t,'startup:');
  Writeln(t,'  // Register COG as master COG');
  Writeln(t,'  SetMasterCOG(GetSelfCOG());');

  Writeln(t,'  player = GetLocalPlayerThing();');

  Writeln(t,'  // Initialise Goals');
  Writeln(t,'  SetInv(player, 99, ',goalbase,');');
  For i:=0 to LBGoals.Items.count-1 do
   Writeln(t,'  SetGoalFlags(player, ',i,', 1);');

  Writeln(t,'  // Give player weapons and ammo');
  Writeln(t,'  SetInv(player, 1, 1);   // fists');

  if CBBriar.Checked then
   Writeln(t,'  SetInv(player, 2, 1);   // briar');

  if CBRifle.Checked then
  Writeln(t,'  SetInv(player, 3, 1);   // ST Rifle');

  if CBTD.Checked then
  Writeln(t,'  SetInv(player, 4, 1);   // TD');

  if CBBow.Checked then
  Writeln(t,'  SetInv(player, 5, 1);   // Crossbow');

  if CBRepeater.Checked then
  Writeln(t,'  SetInv(player, 6, 1);   // Repeater');

  if CBRailgun.Checked then
  Writeln(t,'  SetInv(player, 7, 1);   // Railgun');

  if CBSeq.Checked then
  Writeln(t,'  SetInv(player, 8, 10);   // Sequencer charges');

  if CBConcussion.Checked then
  Writeln(t,'  SetInv(player, 9, 1);   // Concussion Rifle');

  if CBLS.Checked then
  Writeln(t,'  SetInv(player, 10, 1);   // Lightsaber');

  if CBBriar.Checked or CBRifle.Checked then
  Writeln(t,'  SetInv(player, 11, 100);   // Energy');

  if CBBow.Checked or CBRepeater.Checked or CBConcussion.Checked then
  Writeln(t,'  SetInv(player, 12, 100);   // Power');

  if CBRailGun.Checked then
  Writeln(t,'  SetInv(player, 15, 10);   // Railcharges');


  Writeln(t,'  // Initialize weapon.');
  Writeln(t,'  SetFireWait(player, -1);');
  Writeln(t,'  SetMountWait(player, 0);');
  Writeln(t,'  SetCurInvWeapon(player, 0);');
  Writeln(t,'  SelectWeapon(player, AutoSelectWeapon(player, 1));');
  Writeln(t);
  Writeln(t,'SetTimer(15);');

  Writeln(t,'timer:');

  Writeln(t,'  // Force ranking');
  Writeln(t,'  SetInv(player, 20, ',CBRank.ItemIndex,');');
  Writeln(t,'  SetInv(player, 14, 4*50);');
  Writeln(t);
  Writeln(t,'jkSyncForcePowers();');


  Writeln(t,'  Return;');
  Writeln(t);
  Writeln(t,'end');


 finally
  CloseFile(t);
 end;
end;

procedure TCogGen.LBGoalsClick(Sender: TObject);
var i:integer;
begin
 i:=LBGoals.ItemIndex;
 if i<0 then exit;
 EBGoal.Text:=LBGoals.Items[i];
end;

procedure TCogGen.FormCreate(Sender: TObject);
begin
 ClientHeight:=BNCancel.Top+BNCancel.Height+Label2.Top;
 ClientWidth:=LBGoals.Left+LBGoals.Width+Label2.Top;
end;

end.
